title = "Profile - Single"
url = "/mauticians/:user"
layout = "sidebar-left"
is_hidden = 0
child_of = "mey_no_parent"
hide_crumb = 1
remove_crumb_trail = 0
crumb_disabled = 0

[RainLab\User\Components\Account account]

[userProfile]
username = "{{ :user }}"
==
<?php
function onEnd()
{
    if ($this->profile) {
if ($this['isOwnProfile'] && $this->param('mode') === 'edit') {
$this['editing'] = true;
}
}
}
?>
==
{% if profile %}
    {% put sidebar %}
    {% partial 'component_userProfile/user-sidebar' user=profile %}
    {% endput %}

    {% set category='help-with-mautic' %}
    {% set category_id=16 %}
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">{{ 'Help Center contributions'|_ }}</h3>
            {% if isOwnProfile %}
                <a href="{{ 'mauticians/profile-contributions_addedit'|page({user:user.username, category: category, mode: 'new' }) }}" class="btn btn-outline-brand-purple btn-sm ml-auto">{{ 'Add new'|_ }}</a>
            {% endif %}
        </div>
        {% partial 'component_blog/table' profile=profile category=category category_id=category_id %}
    </div>

    {% set category='mautic-blogs' %}
    {% set category_id=11 %}
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">{{ 'Blog contributions'|_ }}</h3>
            {% if isOwnProfile %}
                <a href="{{ 'mauticians/profile-contributions_addedit'|page({user:user.username, category: category , mode: 'new' }) }}" class="btn btn-outline-brand-purple btn-sm ml-auto">{{ 'Add new'|_ }}</a>
            {% endif %}

        </div>
        {% partial 'component_blog/table' profile=profile category=category category_id=category_id %}
    </div>

    <div class="card">
        <div class="card-header">
            <h3 class="card-title">{{ 'Marketplace contributions'|_ }}</h3>
            {% if isOwnProfile %}
                <a href="{{ 'mauticians/profile-marketplace_addedit'|page({user:user.username, mode: 'new' }) }}" class="btn btn-outline-brand-purple btn-sm ml-auto">{{ 'Add new'|_ }}</a>
            {% endif %}
        </div>

        <div class="table-responsive">
            <table class="table card-table table-vcenter text-nowrap">
                <tbody>

                {% if profile.downloads|length %}
                    {% for download in profile.downloads|reverse %}
                        {% partial 'component_marketplace/table_row' download=download isOwnProfile=isOwnProfile %}
                    {% endfor %}
                {% endif %}
                </tbody>
            </table>
        </div>
    </div>

    <div class="card">
        <div class="card-header">
            <h3 class="card-title">{{ 'Group membership'|_ }}</h3>
        </div>
        <div class="card-body ">
			{% set user=profile %}
            {% if user.usergroups|length %}
                {% for group in user.usergroups if group.group_type == 'mauticamp' %}
                    <div class="tag tag-brand-purple">
                        <span class="tag-prepend"><i class="fe mtc-mautic"></i></span>
                        <a href="{{ 'mauticamps/mauticamp-single'|page({groupslug:group.slug}) }}"
                           class="tag-addon tag-gray">
                            {{ group.name }}
                        </a>
                    </div>
                {% endfor %}
                {% for group in user.usergroups if group.group_type == 'working-group' %}
                    <a href="{{ 'working-groups/single'|page({groupslug:group.slug}) }}"
                       class="btn btn-gray btn-xs">
                        <i class="fe {{ group.group_icon }}" data-toggle="tooltip" title=""
                           data-original-title="{{ group.name }}"></i>
                    </a>
                {% endfor %}
            {% endif %}
        </div>
    </div>


    {% set max=3 %}
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">{{ 'Discussion Activity'|_ }} &nbsp;<span class="badge badge-brand-purple">{{ messagesCount }}</span></h3>
        </div>
        {% for post in messages|slice(0,max) %}
            {% partial 'forum_discussion_forum/row' post=post %}
        {% endfor %}
        {% if messages|length > max %}
        <a  href="{{ 'mauticians/profile-forum'|page({user:user.username}) }}" class="btn">{{ 'More'|_ }}</a>
        {% endif %}
    </div>



    {#<div class="card mt-3">
        <div class="card-header">
            <h3 class="card-title">{{ 'Navigation'|_ }}</h3>
        </div>
        <div class="card-body p-0">
            <div class="list-group list-group-transparent mb-0">
                <a href="{{ 'mauticians/profile-single'|page({user:user.username, mode:''}) }}"
                   class="list-group-item list-group-item-action">
                    <span class="icon mr-3"><i class="fe fe-user"></i></span>{{ 'Mautician Profile'|_ }}
                </a>
                <a href="{{ 'mauticians/profile-forum'|page({user:user.username}) }}"
                   class="list-group-item list-group-item-action">
                    <span class="icon mr-3"><i class="fe fe-bookmark"></i></span>{{ 'Discussion Activity'|_ }}
                </a>
                <a href="{{ 'mauticians/profile-marketplace'|page({user:user.username}) }}"
                   class="list-group-item list-group-item-action">
                    <span class="icon mr-3"><i class="fe fe-shopping-bag"></i></span>{{ 'Marketplace Listings'|_ }}
                </a>
                <a href="{{ 'mauticians/profile-contributions'|page({user:user.username}) }}"
                   class="list-group-item list-group-item-action">
                    <span class="icon mr-3"><i class="fe fe-book-open"></i></span>{{ 'Contributed Content'|_ }}
                </a>
            </div>
        </div>
    </div>#}


    {% if editing %}
        {% put scripts %}
        {# --prepare editors-- #}
        <script>
            var quill_options = {
                theme: 'snow'
            };
            var editors = {
                about: new Quill('#user-edit-field-about', quill_options),
                professional: new Quill('#user-edit-field-professional', quill_options)
            };

            var getRealHTML = function (editor) {
                return editor.container.querySelector('.ql-editor').innerHTML;
            }

            var onChangeHandler = function (evt,...args
            )
            {
                var _card = this.container.closest('.card');
                var limit = parseInt(this.container.dataset.inputLimit);
                var pct = (getRealHTML(this).length / limit) * 100;

                var bar = _card.querySelector('.card-header .progress-bar');
                var barColor = 'bg-secondary';
                if (pct > 50) {
                    barColor = 'bg-warning';
                }
                if (pct > 85) {
                    barColor = 'bg-danger';
                }

                if (!bar.classList.contains(barColor)) {
                    bar.classList.forEach(function (c) {
                        if (c.indexOf('bg') === 0) {
                            bar.classList.remove(c)
                        }
                    });
                    bar.classList.add(barColor);
                }
                bar.style.width = Math.floor(pct) + '%';

                var overflowDisplay = getRealHTML(this).length > limit ? 'inherit' : 'none';
                _card.querySelector('.card-header .progress-overflow').style.display = overflowDisplay;
            }
            ;

            var editorsMap = Object.keys(editors);
            editorsMap.forEach(function (k) {
                editors[k].on('editor-change', function (evt,...args)
                {
                    onChangeHandler.call(editors[k], [evt, args]);
                }
                )
            });
        </script>

        {# --save action-- #}
        <script>
            var commitChanges = function () {
                var fieldsOb = {};
                //-- remaining page fields are collected by id naming convention.
                var pageFields = document.querySelectorAll("[id^='user-edit-']");
                pageFields.forEach(function (field) {
                    var fieldName = field.id.replace('user-edit-field-', '');
                    //-- handle quills
                    if (editorsMap.indexOf(fieldName) > -1) {
                        fieldsOb[fieldName] = getRealHTML(editors[fieldName]);
                    }
                    //-- handle plain inputs
                    else {
                        fieldsOb[fieldName] = field.value;
                    }
                });

                document.querySelectorAll('.is-invalid').forEach(function (elem) {
                    elem.classList.remove('is-invalid');
                })

                $.request('onUpdateProfile', {
                    data: fieldsOb,
                    loading: $.oc.stripeLoadIndicator,
                    success: function (data, status, request) {
                        location.href = '{{ 'mauticians/profile-single'|page({user:user.username, 'mode': ''}) }}';
                    },
                    error: function (request, status, error) {
                        var errMessages = request.responseJSON.messages;
                        var errFields = request.responseJSON.fields;
                        for (let k in errFields) {
                            document.querySelector('#user-edit-field-' + k).classList.add('is-invalid');
                        }
                        $.oc.flashMsg({
                            'text': errMessages.join('<br>'),
                            'class': 'error',
                            'interval': 3
                        });
                    }
                });
            };

            $('#profile-save-button').on('click', function () {
                commitChanges();
            });

            {#
            // @deprecated: this would be a lot of work on the user end = bad ux
            var commitOneField = function (field, value) {
                debugger;
            }
            $('.user-edit-save').on('click', function (evt) {
                // using delegation, this handler can facade any number of field save actions.
                // map evt.target.dataset.field to css #user-edit-field-${fieldname}, and find value there
                var field = evt.target.dataset.field;
                var valueEl = $('#user-edit-field-' + field);
                var value;
                // handle quills
                if (editorsMap.indexOf(field) > -1) {
                    value = getRealHTML(editors[field]);

                }
                // handle plain inputs
                else {
                }

                debugger;
            })
            #}

        </script>
        {% endput %}
    {% endif %}
{% endif %}
</div>
</div>
